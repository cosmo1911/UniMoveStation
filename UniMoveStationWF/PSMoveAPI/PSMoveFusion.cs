/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace io.thp.psmove {

using System;
using System.Runtime.InteropServices;

public class PSMoveFusion : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PSMoveFusion(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PSMoveFusion obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PSMoveFusion() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          pinvoke.delete_PSMoveFusion(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PSMoveFusion(PSMoveTracker tracker, float z_near, float z_far) : this(pinvoke.new_PSMoveFusion(PSMoveTracker.getCPtr(tracker), z_near, z_far), true) {
  }

  public void get_position(PSMove move, out float arg1, out float arg2, out float arg3) {
    pinvoke.PSMoveFusion_get_position(swigCPtr, PSMove.getCPtr(move), out arg1, out arg2, out arg3);
  }

  public PSMoveMatrix4x4 get_projection_matrix() {
    PSMoveMatrix4x4 ret = new PSMoveMatrix4x4(pinvoke.PSMoveFusion_get_projection_matrix(swigCPtr), true);
    return ret;
  }

  public PSMoveMatrix4x4 get_modelview_matrix(PSMove move) {
    PSMoveMatrix4x4 ret = new PSMoveMatrix4x4(pinvoke.PSMoveFusion_get_modelview_matrix(swigCPtr, PSMove.getCPtr(move)), true);
    return ret;
  }

}

}
