<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro"
    xmlns:fvm="clr-namespace:UniMoveStation.Representation.ViewModel.Flyout;assembly=UniMoveStation.Representation"
    xmlns:flyout="clr-namespace:UniMoveStation.UI.View.Flyout"
    xmlns:viewModel="clr-namespace:UniMoveStation.Representation.ViewModel;assembly=UniMoveStation.Representation"
    xmlns:view="clr-namespace:UniMoveStation.UI.View"
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Clean/CleanWindow.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TabControl.xaml" />
        <ResourceDictionary Source="/UniMoveStation.UI;component/Resources/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="MyTabItemStyle"
               TargetType="controls:MetroTabItem" 
               BasedOn="{StaticResource {x:Type controls:MetroTabItem}}">

        <Setter Property="Padding"
                    Value="0"
                    />
        <Setter Property="Margin"
                    Value="0"
                    />
        <Style.Triggers>

            <Trigger Property="IsSelected" 
                         Value="False">
                <Setter Property="Background"
                            Value="Transparent"
                            />
                <Setter Property="Foreground"
                            Value="{StaticResource BlackColorBrush}"
                            />
            </Trigger>

            <Trigger Property="IsSelected" 
                         Value="True">
                <Setter Property="Background"
                            Value="{StaticResource WindowBackgroundBrush}"
                            />
                <Setter Property="Foreground"
                            Value="{StaticResource BlackColorBrush}"
                            />
            </Trigger>

            <Trigger Property="IsMouseOver"
                         Value="True">
                <Setter Property="Background"
                            Value="{StaticResource AccentColorBrush3}"
                            />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                                   Value="True"
                                   />
                    <Condition Property="IsSelected"
                                   Value="True"
                                   />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                            Value="{StaticResource WindowBackgroundBrush}"
                            />
                <Setter Property="Foreground"
                            Value="{StaticResource AccentColorBrush2}"
                            />

            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <!--Closable Tab Item Style -->
    <Style x:Key="MyClosableTabItemStyle"
               TargetType="controls:MetroTabItem"
               BasedOn="{StaticResource MyTabItemStyle}">
        <Setter Property="CloseButtonEnabled"
                    Value="True"/>
        <Setter Property="CloseTabCommand"
                    Value="{Binding Navigation.RemoveCommand, Source={StaticResource ViewModelLocator}}"
                    />
        <!--DataContext of item as paramater-->
        <Setter Property="CloseTabCommandParameter"
                    Value="{Binding}"/>
    </Style>
    <!--Add Button Style-->
    <Style x:Key="AddButtonTabItemStyle"
               TargetType="TabItem" 
               BasedOn="{StaticResource {x:Type TabItem}}">

        <Setter Property="Background"
                    Value="Transparent"
                    />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                         Value="True">
                <Setter Property="Background"
                            Value="Transparent"
                            />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Motion Controller Item Template-->
    <DataTemplate DataType="{x:Type viewModel:MotionControllerViewModel}"
                      x:Key="MotionControllerTabItemTemplate">

        <StackPanel Orientation="Horizontal">
            <!--Controller Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationCircle.svg"
                                 Height="32"
                                 Width="32"
                                 Margin="8 4 16 4"
                                 />
            <!--Controller Label-->
            <TextBlock Text="{Binding MotionController.Name}"
                           FontSize="20"
                           Height="32"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                           />
        </StackPanel>

    </DataTemplate>

    <!--Motion Controller Data Template-->
    <DataTemplate DataType="{x:Type viewModel:MotionControllerViewModel}"
                      x:Key="MotionControllerTabContentTemplate">
        <view:MotionControllerView/>
    </DataTemplate>

    <!--Single Camera Tab Item Template-->
    <DataTemplate DataType="{x:Type viewModel:CameraViewModel}"
                      x:Key="SingleCameraTabItemTemplate">
        <StackPanel Orientation="Horizontal">
            <!--Camera Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationX.svg"
                                 Height="32"
                                 Width="32"
                                 Margin="8 4 16 4"
                                 />
            <!--Camera Label-->
            <TextBlock Text="{Binding Camera.Name}"
                           FontSize="20"
                           Height="32"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                           />
        </StackPanel>
    </DataTemplate>

    <!--Single Camera Tab Data Template-->
    <DataTemplate DataType="{x:Type viewModel:CameraViewModel}"
                  x:Key="SingleCameraTabContentTemplate">
        <view:CameraView/>
    </DataTemplate>

    <!--All Cameras Tab Item Template-->
    <DataTemplate DataType="{x:Type viewModel:CamerasViewModel}"
                      x:Key="AllCamerasTabItemTemplate">

        <StackPanel Orientation="Horizontal">
            <!--Cameras Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationX.svg"
                                 Height="32"
                                 Width="32"
                                 Margin="8 4 16 4"/>
            <!--Cameras Label-->
            <TextBlock Text="{Binding CamerasModel.Name}"
                           FontSize="20"
                           Height="32"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                           />
        </StackPanel>
    </DataTemplate>
    <!--All Cameras Tab Data Template-->
    <DataTemplate DataType="{x:Type viewModel:CamerasViewModel}"
                      x:Key="AllCamerasTabContentTemplate">
        <view:CamerasView/>
    </DataTemplate>


    <!--All Motion Controllers Tab Item Template-->
    <DataTemplate DataType="{x:Type viewModel:MotionControllersViewModel}"
                      x:Key="AllMotionControllersTabItemTemplate">

        <StackPanel Orientation="Horizontal">
            <!--Motion Controllers Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationCircle.svg"
                                 Height="32"
                                 Width="32"
                                 Margin="8 4 16 4"/>
            <!--Motion Controllers Label-->
            <TextBlock Text="{Binding Name}"
                           FontSize="20"
                           Height="32"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                           />
        </StackPanel>
    </DataTemplate>

    <!--All Motion Controllers Tab Data Template-->
    <DataTemplate DataType="{x:Type viewModel:MotionControllersViewModel}"
                      x:Key="AllMotionControllersTabContentTemplate">
        <view:MotionControllersView/>
    </DataTemplate>

    <!--Add Button-->
    <DataTemplate x:Key="AddButtonTabItemTemplate">
        <Button Width="40"
                    Height="40"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Margin="0"
                    Command="{Binding Navigation.AddCommand, Source={StaticResource ViewModelLocator}}"
                    CommandParameter="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}">
            <Rectangle Width="20"
                           Height="20"
                           Fill="{StaticResource AccentColorBrush}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_add}"
                                     />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>

    </DataTemplate>

    <!--Server Tab Item Template-->
    <DataTemplate DataType="{x:Type viewModel:ServerViewModel}"
                  x:Key="ServerTabItemTemplate">
        <StackPanel Orientation="Horizontal">
            <!--Server Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationTriangle.svg"
                             Height="32"
                             Width="32"
                             Margin="8 4 16 4"
                             />
            <!--Server Label-->
            <TextBlock Text="Server"
                       FontSize="20"
                       Height="32"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                       />
        </StackPanel>
    </DataTemplate>

    <!--Server Data Template-->
    <DataTemplate DataType="{x:Type viewModel:ServerViewModel}"
                      x:Key="ServerTabContentTemplate">
        <view:ServerView/>
    </DataTemplate>

    <!--Client Tab Item Template-->
    <DataTemplate DataType="{x:Type viewModel:ClientViewModel}"
                      x:Key="ClientTabItemTemplate">
        <StackPanel Orientation="Horizontal">
            <!--Client Icon-->
            <svgc:SvgViewbox Source="/UniMoveStation.UI;component/Resources/PlayStationSquare.svg"
                             Height="32"
                             Width="32"
                             Margin="8 4 16 4"
                             />
            <!--Client Label-->
            <TextBlock Text="{Binding Client.Name}"
                       FontSize="20"
                       Height="32"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                       />
        </StackPanel>
    </DataTemplate>

    <!--Client Tab Data Template-->
    <DataTemplate DataType="{x:Type viewModel:ClientViewModel}"
                  x:Key="ClientTabContentTemplate">
        <view:ClientView/>
    </DataTemplate>

    <DataTemplate x:Key="AddMotionControllerItemTemplate" 
                  DataType="{x:Type fvm:AddMotionControllerViewModel}">
        <flyout:AddMotionControllerView />
    </DataTemplate>

    <DataTemplate x:Key="AddCameraItemTemplate" 
                  DataType="{x:Type fvm:AddCameraViewModel}">
        <flyout:AddCameraView/>
    </DataTemplate>

    <DataTemplate x:Key="SettingsItemTemplate" 
                  DataType="{x:Type fvm:SettingsViewModel}">
        <flyout:SettingsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModel:NavigationViewModel}">
        <view:NavigationView/>
    </DataTemplate>

    <Style x:Key="AppThemeMenuItemStyle"
           TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Command"
                Value="{Binding ChangeAccentCommand}" />
        <!--<Setter Property="Icon"
                Value="{StaticResource AppThemeMenuIcon}" />-->
        <Setter Property="Header"
                Value="{Binding Name, Mode=OneWay}" />
    </Style>

    <Style x:Key="AccentColorMenuItemStyle"
           TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Command"
                Value="{Binding ChangeAccentCommand}" />
        <!--<Setter Property="Icon"
                Value="{StaticResource AccentMenuIcon}" />-->
        <Setter Property="Header"
                Value="{Binding Name, Mode=OneWay}" />
    </Style>
    
    <Style x:Key="DefaultFlyoutStyle"
               BasedOn="{StaticResource {x:Type controls:Flyout}}"
               TargetType="{x:Type controls:Flyout}">

        <Setter Property="IsOpen"
                Value="{Binding IsOpen}"
                />
        <Setter Property="Position"
                Value="{Binding Position}"
                />
        <Setter Property="Header"
                Value="{Binding Header}"
                />
        <Setter Property="MinWidth"
                Value="300"
                />
        <Setter Property="CloseCommand"
                Value="{Binding CloseCommand}"/>
    </Style>
    <Style x:Key="AddMotionControllerFlyoutStyle"
               BasedOn="{StaticResource DefaultFlyoutStyle}"
               TargetType="{x:Type controls:Flyout}">

        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="10 30 10 10"
                              DataContext="{Binding Source={StaticResource ViewModelLocator}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="nav"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=CloseCommand, Mode=OneWay}"
                                    DockPanel.Dock="Left"
                                    Style="{DynamicResource MetroCircleButtonStyle}"
                                    Height="40"
                                    Width="40"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <actions:SetFlyoutOpenAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}"
                                                                 Value="False"
                                                                 />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Rectangle Width="20"
                                           Height="15"
                                           Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_arrow_right}"
                                                     />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <TextBlock Grid.Column="1"
                                       FontSize="20"
                                       Margin="15,0,15,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding AddMotionController.Header}"
                                       />
                        <Button Grid.Column="2"
                                    Width="40"
                                    Height="40"
                                    Style="{DynamicResource MetroCircleButtonStyle}"
                                    Command="{Binding AddMotionController.RefreshCommand}">
                            <Rectangle Width="17"
                                           Height="17"
                                           Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_refresh}"
                                                     />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddCameraFlyoutStyle"
            BasedOn="{StaticResource DefaultFlyoutStyle}"
            TargetType="{x:Type controls:Flyout}">

        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="10 30 10 10"
                              DataContext="{Binding Source={StaticResource ViewModelLocator}}">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="nav"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=CloseCommand, Mode=OneWay}"
                                    DockPanel.Dock="Left"
                                    Style="{DynamicResource MetroCircleButtonStyle}"
                                    Height="40"
                                    Width="40"
                                    FontFamily="Segoe UI Symbol"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}"
                                    FontSize="16"
                                    VerticalAlignment="Bottom">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <actions:SetFlyoutOpenAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}"
                                                                     Value="False"
                                                                     />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Rectangle Width="20"
                                           Height="15"
                                           Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_arrow_right}"
                                                     />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <TextBlock Grid.Column="1"
                                       FontSize="20"
                                       Margin="15,0,15,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding AddCamera.Header}"
                                       />
                        <Button Grid.Column="2"
                                    Width="40"
                                    Height="40"
                                    FontFamily="Segoe UI Symbol"
                                    FontSize="16"
                                    Style="{DynamicResource MetroCircleButtonStyle}"
                                    Command="{Binding AddCamera.RefreshCommand}">
                            <Rectangle Width="17"
                                           Height="17"
                                           Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_refresh}"
                                                     />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
